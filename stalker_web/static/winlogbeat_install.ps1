#Requires -RunAsAdministrator

Write-Host "Downloading Winlogbeat..."
(New-Object System.Net.WebClient).DownloadFile("https://artifacts.elastic.co/downloads/beats/winlogbeat/winlogbeat-7.13.2-windows-x86_64.zip", "winlogbeat.zip")

Write-Host "Extracting files..."
Expand-Archive winlogbeat.zip -DestinationPath winlogbeat

Write-Host "Moving files..."
Move-Item -Path winlogbeat\winlogbeat-7.13.2-windows-x86_64 -Destination 'C:\Program Files\Winlogbeat' -force

Write-Host "Cleaning up..."
Remove-Item -LiteralPath "winlogbeat" -Force -Recurse
Remove-Item winlogbeat.zip

CD 'C:\Program Files\Winlogbeat'

$es_host = Read-Host 'Enter the hostname/IP and port for Elasticsearch (192.168.1.24:9200)'

Write-Host "Replacing config..."
$b64 = ''
$bytes = [Convert]::FromBase64String($b64)
$conf_str = [System.Text.Encoding]::ASCII.GetString($bytes)
$conf_str.replace('ES_HOST_REPLACE', $es_host) | Set-Content 'winlogbeat.yml'

Write-Host "Installing Winlogbeat..."
PowerShell.exe -ExecutionPolicy UnRestricted -File .\install-service-winlogbeat.ps1

Write-Host "Creating keystore..."
New-Item -ItemType directory -Path 'C:\ProgramData\winlogbeat'
.\winlogbeat.exe keystore create -E keystore.path=C:\ProgramData\winlogbeat\winlogbeat.keystore

Write-Host "Enter password for Winlogbeat user"
.\winlogbeat.exe keystore -E keystore.path=C:\ProgramData\winlogbeat\winlogbeat.keystore add WLB_PASS

Write-Host "Finishing install..."
.\winlogbeat.exe setup -e
Start-Service winlogbeat

Write-Host "Complete"

